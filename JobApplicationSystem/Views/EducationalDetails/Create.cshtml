@model JobApplicationSystem.DAL.Model.EducationalDetails

@{
    ViewData["Title"] = "Create";
}

<h4>Create New Educational Details</h4>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
          
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input text class="form-check-input" asp-for="IsYearGap" /> @Html.DisplayNameFor(model => model.IsYearGap)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActiveBacklogs" /> @Html.DisplayNameFor(model => model.IsActiveBacklogs)
                </label>
            </div>
            <div class="form-group">
                <label>Academic Projects</label><br />
                <textarea onkeyup="textCounter(this,'counter',30);" id="message"> </textarea><br />
                <input disabled  maxlength="2" size="2" value="30" id="counter">
            </div>

            <div class="form-group">
                <input type="submit" value="Next" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<script>
function textCounter(field,field2,maxlimit)
{
 var countfield = document.getElementById(field2);
 if ( field.value.length > maxlimit ) {
  field.value = field.value.substring( 0, maxlimit );
  return false;
 } else {
  countfield.value = maxlimit - field.value.length;
 }
}
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
